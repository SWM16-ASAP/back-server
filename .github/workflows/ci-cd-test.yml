name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feat/CICD ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ECR_IAM_ROLE: ${{ secrets.AWS_ECR_IAM_ROLE }}
  AWS_ECR_URL: ${{ secrets.AWS_ECR_URL }}
  AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      # code checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # JAVA 17 for build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # cache Gradle packages
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

	    # Gradle 권한 변경
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # build project
      - name: Build with Gradle
        run: |
          ./gradlew build

      # aws auth
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ECR_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: 'no'

      # login ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@1

      # set docker buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # make docker image tag
      - name: Extract metadata tags for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.AWS_ECR_URL }}/${{ env.AWS_ECR_REPOSITORY }}
          tags: |
            type=sha,prefix=${{ github.run_id }},format=short

      # docker build&push
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          provenance: false
          push: true